{"ast":null,"code":"import { Subject, takeUntil } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../user-data.service\";\nimport * as i2 from \"../chat-data.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"messageRef\"];\nfunction MessageComponent_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"img\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MessageComponent_div_2_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"img\", 13);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MessageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3, 4)(2, \"div\", 5);\n    i0.ɵɵtemplate(3, MessageComponent_div_2_div_3_Template, 2, 0, \"div\", 6);\n    i0.ɵɵtemplate(4, MessageComponent_div_2_ng_template_4_Template, 2, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"p\", 8);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 9);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const _r3 = i0.ɵɵreference(1);\n    const _r5 = i0.ɵɵreference(5);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"lastMes\", (ctx_r0.messages == null ? null : ctx_r0.messages.length) === i_r2 + 1);\n    i0.ɵɵproperty(\"ngClass\", message_r1.senderId.id === ctx_r0.curUserId ? \"message-centering-right\" : \"message-centering-left\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", _r3.classList.contains(\"message-centering-right\"))(\"ngIfElse\", _r5);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(message_r1.content);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", i0.ɵɵpipeBind2(9, 8, message_r1.time, \"d MMMM, y, HH:mm:ss\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(11, 11, message_r1.time, \"HH:mm\"), \" \");\n  }\n}\nexport class MessageComponent {\n  constructor(userData, chatData) {\n    this.userData = userData;\n    this.chatData = chatData;\n    this.messages = null;\n    this.newChat = true;\n    this.unsubscribe$ = new Subject();\n    this.curUserId = this.userData.curUserDoc?.ref.id;\n  }\n  ngAfterViewInit() {\n    //Scroll - smooth with new message and fast while chat opens\n    this.chatData.chatData$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => this.newChat = true);\n    this.messageItems.changes.pipe(takeUntil(this.unsubscribe$)).subscribe(() => this.scrollToLastItem());\n  }\n  scrollToLastItem() {\n    //TODO Could be done better\n    console.log(scroll);\n    if (!this.newChat && this.messageItems?.last) this.messageItems.last.nativeElement.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n    if (this.newChat && this.messageItems?.last) {\n      this.messageItems.last.nativeElement.scrollIntoView({\n        behavior: 'instant',\n        block: 'end'\n      });\n      this.newChat = false;\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\nMessageComponent.ɵfac = function MessageComponent_Factory(t) {\n  return new (t || MessageComponent)(i0.ɵɵdirectiveInject(i1.UserDataService), i0.ɵɵdirectiveInject(i2.ChatDataService));\n};\nMessageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessageComponent,\n  selectors: [[\"app-message\"]],\n  viewQuery: function MessageComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageItems = _t);\n    }\n  },\n  inputs: {\n    messages: \"messages\"\n  },\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"main\"], [1, \"messages-container\"], [\"class\", \"message flex\", 3, \"ngClass\", \"lastMes\", 4, \"ngFor\", \"ngForOf\"], [1, \"message\", \"flex\", 3, \"ngClass\"], [\"messageRef\", \"\"], [1, \"message-box\"], [\"class\", \"echo-box right\", 4, \"ngIf\", \"ngIfElse\"], [\"echoLeft\", \"\"], [1, \"message-text\"], [1, \"message-time\", 3, \"title\"], [1, \"echo-box\", \"right\"], [\"src\", \"../../../../../../assets/svg/echo-send.svg\", \"alt\", \"echo-svg\"], [1, \"echo-box\", \"left\"], [\"src\", \"../../../../../../assets/svg/echo-receive.svg\", \"alt\", \"echo-svg\"]],\n  template: function MessageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, MessageComponent_div_2_Template, 12, 14, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.DatePipe],\n  styles: [\".main[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-end;\\n  height: 100%;\\n  width: 100%;\\n  margin: 0 auto;\\n  line-height: 2.1rem;\\n  font-size: 1.8rem;\\n}\\n\\n\\n.messages-container[_ngcontent-%COMP%] {\\n  width: 70rem;\\n  margin: 0 auto;\\n  max-height: calc(100% - 6rem);\\n}\\n\\n.message-box[_ngcontent-%COMP%] {\\n  position: relative;\\n  width: max-content;\\n  min-width: 7.3rem;\\n  max-width: 46rem;\\n  margin-bottom: 1.3rem;\\n  padding: 0.9rem 4.5rem 0.9rem 0.9rem;\\n  background-color: #5f3dc4;\\n}\\n\\n.message-text[_ngcontent-%COMP%] {\\n  color: #e8e8e8;\\n  font-weight: 400;\\n}\\n\\n.message-time[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  position: absolute;\\n  right: 5px;\\n  bottom: 0;\\n}\\n\\n.message-centering-left[_ngcontent-%COMP%] {\\n  justify-content: flex-start;\\n}\\n.message-centering-left[_ngcontent-%COMP%]   .message-box[_ngcontent-%COMP%] {\\n  border-radius: 0.85rem 1.3rem 0.85rem 0;\\n  justify-content: flex-start;\\n  background-color: #27272a;\\n}\\n.message-centering-left[_ngcontent-%COMP%]   .message-box[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%] {\\n  color: rgb(104, 108, 114);\\n}\\n\\n.message-centering-right[_ngcontent-%COMP%] {\\n  justify-content: flex-end;\\n}\\n.message-centering-right[_ngcontent-%COMP%]   .message-box[_ngcontent-%COMP%] {\\n  border-radius: 1.3rem 0.85rem 0 0.85rem;\\n  justify-content: flex-end;\\n  background-color: #6741d9;\\n}\\n.message-centering-right[_ngcontent-%COMP%]   .message-box[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%] {\\n  color: #d0bfff;\\n}\\n\\n.echo-box[_ngcontent-%COMP%] {\\n  position: absolute;\\n}\\n\\n.right[_ngcontent-%COMP%] {\\n  left: -19px;\\n  top: -11px;\\n}\\n\\n.left[_ngcontent-%COMP%] {\\n  right: -19px;\\n  top: -11px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZS9tZXNzZW5nZXIvbWVzc2VuZ2VyL2NoYXQvbWVzc2FnZS9tZXNzYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxjQUFBO0VBRUEsbUJBQUE7RUFDQSxpQkFBQTtBQURGOztBQUtBLFdBQUE7QUFDQTtFQUdFLFlBQUE7RUFDQSxjQUFBO0VBQ0EsNkJBQUE7QUFKRjs7QUFXQTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSxvQ0FBQTtFQUVBLHlCQUFBO0FBVEY7O0FBWUE7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7QUFURjs7QUFZQTtFQUNFLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtBQVRGOztBQVlBO0VBQ0UsMkJBQUE7QUFURjtBQVVFO0VBQ0UsdUNBQUE7RUFDQSwyQkFBQTtFQUNBLHlCQUFBO0FBUko7QUFTTTtFQUNFLHlCQUFBO0FBUFI7O0FBWUE7RUFDRSx5QkFBQTtBQVRGO0FBVUk7RUFDRSx1Q0FBQTtFQUNBLHlCQUFBO0VBQ0EseUJBQUE7QUFSTjtBQVNNO0VBQ0UsY0FBQTtBQVBSOztBQVlBO0VBQ0Usa0JBQUE7QUFURjs7QUFXQTtFQUNFLFdBQUE7RUFDQSxVQUFBO0FBUkY7O0FBVUE7RUFDRSxZQUFBO0VBQ0EsVUFBQTtBQVBGIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5tYWluIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcblxyXG4gIGxpbmUtaGVpZ2h0OiAyLjFyZW07XHJcbiAgZm9udC1zaXplOiAxLjhyZW07XHJcblxyXG59XHJcblxyXG4vKk1FU1NBR0VTKi9cclxuLm1lc3NhZ2VzLWNvbnRhaW5lciB7XHJcbiAgLy9kaXNwbGF5OiBmbGV4O1xyXG4gIC8vYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gIHdpZHRoOiA3MHJlbTtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBtYXgtaGVpZ2h0OiBjYWxjKDEwMCUgLSA2cmVtKTtcclxufVxyXG5cclxuLm1lc3NhZ2Uge1xyXG4gIC8vanVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxufVxyXG5cclxuLm1lc3NhZ2UtYm94IHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IG1heC1jb250ZW50O1xyXG4gIG1pbi13aWR0aDogNy4zcmVtO1xyXG4gIG1heC13aWR0aDogNDZyZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogMS4zcmVtO1xyXG4gIHBhZGRpbmc6IDAuOXJlbSA0LjVyZW0gMC45cmVtIDAuOXJlbSA7XHJcblxyXG4gIGJhY2tncm91bmQtY29sb3I6ICM1ZjNkYzQ7XHJcbn1cclxuXHJcbi5tZXNzYWdlLXRleHQge1xyXG4gIGNvbG9yOiAjZThlOGU4O1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuXHJcbi5tZXNzYWdlLXRpbWUge1xyXG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICByaWdodDogNXB4O1xyXG4gIGJvdHRvbTogMDtcclxufVxyXG5cclxuLm1lc3NhZ2UtY2VudGVyaW5nLWxlZnQge1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAubWVzc2FnZS1ib3h7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjg1cmVtIDEuM3JlbSAwLjg1cmVtIDA7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjcyNzJhO1xyXG4gICAgICAubWVzc2FnZS10aW1lIHtcclxuICAgICAgICBjb2xvcjogcmdiKDEwNCwgMTA4LCAxMTQpO1xyXG4gICAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ubWVzc2FnZS1jZW50ZXJpbmctcmlnaHQge1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICAubWVzc2FnZS1ib3h7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEuM3JlbSAwLjg1cmVtIDAgMC44NXJlbTtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzY3NDFkOTtcclxuICAgICAgLm1lc3NhZ2UtdGltZSB7XHJcbiAgICAgICAgY29sb3I6ICNkMGJmZmY7XHJcbiAgICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5lY2hvLWJveCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG59XHJcbi5yaWdodCB7XHJcbiAgbGVmdDogLTE5cHg7XHJcbiAgdG9wOiAtMTFweDtcclxufVxyXG4ubGVmdCB7XHJcbiAgcmlnaHQ6IC0xOXB4O1xyXG4gIHRvcDogLTExcHg7XHJcbn1cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AASA,SAAQA,OAAO,EAAEC,SAAS,QAAO,MAAM;;;;;;;;ICC7BC,+BAA4G;IAC1GA,0BAAsE;IACxEA,iBAAM;;;;;IAEJA,+BAA2B;IACzBA,0BAAyE;IAC3EA,iBAAM;;;;;IAdZA,iCAMC;IAEGA,uEAEM;IACNA,wHAIc;IACdA,4BAAwB;IAAAA,YAAmB;IAAAA,iBAAI;IAC/CA,+BAAkF;;IAChFA,aACF;;IAAAA,iBAAO;;;;;;;;IAfTA,iGAA4C;IAD5CA,4HAAoG;IAKrEA,eAAgE;IAAhEA,wEAAgE;IAQrEA,eAAmB;IAAnBA,wCAAmB;IAChBA,eAAsD;IAAtDA,+FAAsD;IAC/EA,eACF;IADEA,iFACF;;;ADJV,OAAM,MAAOC,gBAAgB;EAO3BC,YACWC,QAAyB,EACxBC,QAAyB;IAD1B,aAAQ,GAARD,QAAQ;IACP,aAAQ,GAARC,QAAQ;IARJ,aAAQ,GAAqB,IAAI;IAIzC,YAAO,GAAY,IAAI;IA8BvB,iBAAY,GAAG,IAAIN,OAAO,EAAQ;IAxBxC,IAAI,CAACO,SAAS,GAAG,IAAI,CAACF,QAAQ,CAACG,UAAU,EAAEC,GAAG,CAACC,EAAY;EAC7D;EAEAC,eAAe;IACb;IACA,IAAI,CAACL,QAAQ,CAACM,SAAS,CAACC,IAAI,CAACZ,SAAS,CAAC,IAAI,CAACa,YAAY,CAAC,CAAC,CAACC,SAAS,CAAC,MACnE,IAAI,CAACC,OAAO,GAAG,IAAI,CACpB;IACD,IAAI,CAACC,YAAY,CAACC,OAAO,CAACL,IAAI,CAACZ,SAAS,CAAC,IAAI,CAACa,YAAY,CAAC,CAAC,CAACC,SAAS,CAAC,MACrE,IAAI,CAACI,gBAAgB,EAAE,CACxB;EACH;EAEQA,gBAAgB;IACtB;IACAC,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;IACnB,IAAI,CAAC,IAAI,CAACN,OAAO,IAAI,IAAI,CAACC,YAAY,EAAEM,IAAI,EAC1C,IAAI,CAACN,YAAY,CAACM,IAAI,CAACC,aAAa,CAACC,cAAc,CAAC;MAACC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzF,IAAI,IAAI,CAACX,OAAO,IAAI,IAAI,CAACC,YAAY,EAAEM,IAAI,EAAE;MAC3C,IAAI,CAACN,YAAY,CAACM,IAAI,CAACC,aAAa,CAACC,cAAc,CAAC;QAACC,QAAQ,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACxF,IAAI,CAACX,OAAO,GAAG,KAAK;;EAExB;EAGAY,WAAW;IACT,IAAI,CAACd,YAAY,CAACe,IAAI,EAAE;IACxB,IAAI,CAACf,YAAY,CAACgB,QAAQ,EAAE;EAC9B;;AAvCW3B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA4B;EAAAC;IAAA;;;;;;;;;;;;;;;;MCjB3B9B,+BAAmB;MAEfA,mEAqBM;MACRA,iBAAM;;;MApBkBA,eAAa;MAAbA,sCAAa","names":["Subject","takeUntil","i0","MessageComponent","constructor","userData","chatData","curUserId","curUserDoc","ref","id","ngAfterViewInit","chatData$","pipe","unsubscribe$","subscribe","newChat","messageItems","changes","scrollToLastItem","console","log","scroll","last","nativeElement","scrollIntoView","behavior","block","ngOnDestroy","next","complete","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Courses\\ANGULAR\\echo\\src\\app\\feature\\messenger\\messenger\\chat\\message\\message.component.ts","C:\\Courses\\ANGULAR\\echo\\src\\app\\feature\\messenger\\messenger\\chat\\message\\message.component.html"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input, OnDestroy, QueryList,\n  ViewChild, ViewChildren\n} from '@angular/core';\nimport {message, UserDataService} from \"../../../../user-data.service\";\nimport {ChatDataService} from \"../chat-data.service\";\nimport {Subject, takeUntil} from \"rxjs\";\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\n\nexport class MessageComponent implements AfterViewInit, OnDestroy{\n  @Input() public messages: message[] | null = null;\n  @ViewChildren('messageRef') private messageItems!: QueryList<ElementRef>;\n\n  public curUserId: string;\n  private newChat: boolean = true;\n\n  constructor(\n      public userData: UserDataService,\n      private chatData: ChatDataService\n  ) {\n    this.curUserId = this.userData.curUserDoc?.ref.id as string;\n  };\n\n  ngAfterViewInit() {\n    //Scroll - smooth with new message and fast while chat opens\n    this.chatData.chatData$.pipe(takeUntil(this.unsubscribe$)).subscribe(() =>\n      this.newChat = true\n    )\n    this.messageItems.changes.pipe(takeUntil(this.unsubscribe$)).subscribe(() =>\n      this.scrollToLastItem()\n    );\n  };\n\n  private scrollToLastItem(): void {\n    //TODO Could be done better\n    console.log(scroll)\n    if (!this.newChat && this.messageItems?.last)\n      this.messageItems.last.nativeElement.scrollIntoView({behavior: 'smooth', block: 'end'});\n    if (this.newChat && this.messageItems?.last) {\n      this.messageItems.last.nativeElement.scrollIntoView({behavior: 'instant', block: 'end'});\n      this.newChat = false;\n    }\n  };\n\n  private unsubscribe$ = new Subject<void>();\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  };\n}\n","  <main class=\"main\">\n    <div class=\"messages-container\">\n      <div\n        class=\"message flex\"\n        *ngFor=\"let message of messages; index as i\"\n        [ngClass]=\"message.senderId.id === curUserId ? 'message-centering-right' : 'message-centering-left'\"\n        [class.lastMes]=\"messages?.length === i + 1\"\n        #messageRef\n      >\n        <div class=\"message-box\">\n          <div class=\"echo-box right\" *ngIf=\"messageRef.classList.contains('message-centering-right'); else echoLeft\">\n            <img src=\"../../../../../../assets/svg/echo-send.svg\" alt=\"echo-svg\"/>\n          </div>\n          <ng-template #echoLeft>\n            <div class=\"echo-box left\">\n              <img src=\"../../../../../../assets/svg/echo-receive.svg\" alt=\"echo-svg\"/>\n            </div>\n          </ng-template>\n          <p class=\"message-text\">{{message.content}}</p>\n          <span class=\"message-time\" title=\"{{message.time | date:'d MMMM, y, HH:mm:ss' }}\">\n            {{message.time | date:'HH:mm'}}\n          </span>\n        </div>\n      </div>\n    </div>\n  </main>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}