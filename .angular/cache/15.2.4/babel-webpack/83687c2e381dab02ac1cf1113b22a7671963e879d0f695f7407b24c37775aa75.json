{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction DialogComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1, 2);\n    i0.ɵɵlistener(\"click\", function DialogComponent_div_0_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const dialog_r1 = restoredCtx.$implicit;\n      const _r2 = i0.ɵɵreference(1);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onclick(dialog_r1, _r2));\n    });\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"div\", 6)(6, \"p\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"p\", 9);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const dialog_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", dialog_r1.ref.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"src\", dialog_r1.otherUserPhoto, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(dialog_r1.otherUserName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 5, dialog_r1.lastMessageTime, \"HH:mm\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dialog_r1.lastMessageValue);\n  }\n}\nexport class DialogComponent {\n  constructor() {\n    this.dialogs = null;\n    this.selectedDialog = new EventEmitter();\n    this.selected = null;\n  }\n  handleEscapeKey(event) {\n    this.selected?.classList.remove('selected');\n    this.selected = null;\n  }\n  //TODO Refactor this to identify opened dialog by its ID, not element\n  onclick(doc, element) {\n    if (this.selected) this.selected.classList.remove('selected');\n    element.classList.add('selected');\n    this.selected = element;\n    this.selectedDialog.emit(doc);\n  }\n  ngAfterViewChecked() {\n    if (this.selected && !this.selected.classList.contains('selected')) this.selected.classList.add('selected');\n  }\n}\nDialogComponent.ɵfac = function DialogComponent_Factory(t) {\n  return new (t || DialogComponent)();\n};\nDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogComponent,\n  selectors: [[\"app-dialog\"]],\n  hostBindings: function DialogComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.escape\", function DialogComponent_keydown_escape_HostBindingHandler($event) {\n        return ctx.handleEscapeKey($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    dialogs: \"dialogs\"\n  },\n  outputs: {\n    selectedDialog: \"selectedDialog\"\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[\"class\", \"chat flex\", 3, \"routerLink\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat\", \"flex\", 3, \"routerLink\", \"click\"], [\"selected\", \"\"], [1, \"img-box\"], [\"alt\", \"User's avatar\", \"decoding\", \"async\", 1, \"avatar\"], [1, \"content-box\"], [1, \"header\", \"flex\"], [1, \"username\"], [1, \"time\"], [1, \"message\"]],\n  template: function DialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DialogComponent_div_0_Template, 13, 8, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(1, 1, ctx.dialogs));\n    }\n  },\n  dependencies: [i1.RouterLink, i2.NgForOf, i2.AsyncPipe, i2.DatePipe],\n  styles: [\".chat[_ngcontent-%COMP%] {\\n  padding: 0.7rem;\\n  max-height: 7.5rem;\\n  overflow: hidden;\\n  border-radius: 10px;\\n  gap: 1rem;\\n  cursor: pointer;\\n}\\n.chat[_ngcontent-%COMP%]:hover {\\n  background-color: #27272a;\\n}\\n.chat[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n}\\n\\n.selected[_ngcontent-%COMP%] {\\n  background-color: #6c44e3 !important;\\n}\\n.selected[_ngcontent-%COMP%]   .content-box[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%], .selected[_ngcontent-%COMP%]   .content-box[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%] {\\n  color: #d0d0d0 !important;\\n}\\n\\n.content-box[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.avatar[_ngcontent-%COMP%] {\\n  border-radius: 50%;\\n  height: 5.3rem;\\n  width: 5.3rem;\\n  object-fit: cover;\\n  object-position: center;\\n  image-rendering: smooth;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: space-between;\\n  margin-bottom: 1.2rem;\\n}\\n\\n.username[_ngcontent-%COMP%] {\\n  font-size: 1.6rem;\\n  color: #d0d0d0;\\n  font-weight: 600;\\n}\\n\\n.time[_ngcontent-%COMP%] {\\n  font-size: 1.3rem;\\n  font-weight: 600;\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  color: #777;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZS9tZXNzZW5nZXIvbWVzc2VuZ2VyL2RpYWxvZ3MvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxTQUFBO0VBRUEsZUFBQTtBQUFGO0FBRUU7RUFDRSx5QkFBQTtBQUFKO0FBRUU7RUFDRSxhQUFBO0FBQUo7O0FBSUE7RUFDRSxvQ0FBQTtBQURGO0FBR0k7RUFDRSx5QkFBQTtBQUROOztBQU1BO0VBQ0UsV0FBQTtBQUhGOztBQU1BO0VBQ0Usa0JBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsdUJBQUE7RUFFQSx1QkFBQTtBQUpGOztBQU9BO0VBQ0UsV0FBQTtFQUNBLDhCQUFBO0VBQ0EscUJBQUE7QUFKRjs7QUFPQTtFQUNFLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLGdCQUFBO0FBSkY7O0FBT0E7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0FBSkY7O0FBT0E7RUFDRSxXQUFBO0VBQ0EsV0FBQTtBQUpGIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXQge1xyXG4gIHBhZGRpbmc6IDAuN3JlbTtcclxuICBtYXgtaGVpZ2h0OiA3LjVyZW07XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGdhcDogMXJlbTtcclxuXHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAmOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI3MjcyYTtcclxuICB9XHJcbiAgJjpmb2N1cyB7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuLnNlbGVjdGVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmM0NGUzICFpbXBvcnRhbnQ7XHJcbiAgLmNvbnRlbnQtYm94IHtcclxuICAgIC50aW1lLCAubWVzc2FnZXtcclxuICAgICAgY29sb3I6ICNkMGQwZDAgIWltcG9ydGFudDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5jb250ZW50LWJveCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5hdmF0YXIge1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBoZWlnaHQ6IDUuM3JlbTtcclxuICB3aWR0aDogNS4zcmVtO1xyXG4gIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xyXG5cclxuICBpbWFnZS1yZW5kZXJpbmc6IHNtb290aDtcclxufVxyXG5cclxuLmhlYWRlciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAganVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47XHJcbiAgbWFyZ2luLWJvdHRvbTogMS4ycmVtO1xyXG59XHJcblxyXG4udXNlcm5hbWUge1xyXG4gIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gIGNvbG9yOiAjZDBkMGQwO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbn1cclxuXHJcbi50aW1lIHtcclxuICBmb250LXNpemU6IDEuM3JlbTtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4ubWVzc2FnZSB7XHJcbiAgY29sb3I6ICM3Nzc7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAAA,SAIEA,YAAY,QAIP,eAAe;;;;;;;ICRtBC,iCAAyI;IAA3EA;MAAA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAyB;IAAA,EAAC;IAC/FA,8BAAqB;IACnBA,yBAA4F;IAC9FA,iBAAM;IACNA,8BAAyB;IAEDA,YAAwB;IAAAA,iBAAI;IAChDA,4BAAgB;IAAAA,YAAyC;;IAAAA,iBAAI;IAE/DA,6BAAmB;IAAAA,aAA2B;IAAAA,iBAAI;;;;IAT4CA,6CAA4B;IAElFA,eAAkC;IAAlCA,iEAAkC;IAIpDA,eAAwB;IAAxBA,6CAAwB;IAC5BA,eAAyC;IAAzCA,+EAAyC;IAExCA,eAA2B;IAA3BA,gDAA2B;;;ADUlD,OAAM,MAAOC,eAAe;EAN5BC;IAOW,YAAO,GAAyC,IAAI;IACnD,mBAAc,GAAG,IAAIH,YAAY,EAAc;IAQzD,aAAQ,GAAuB,IAAI;;EALnCI,eAAe,CAACC,KAAoB;IAClC,IAAI,CAACC,QAAQ,EAAEC,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;IAC3C,IAAI,CAACF,QAAQ,GAAG,IAAI;EACtB;EAIA;EACOG,OAAO,CAACC,GAAe,EAAEC,OAAY;IAC1C,IAAI,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACC,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;IAC7DG,OAAO,CAACJ,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC;IACjC,IAAI,CAACN,QAAQ,GAAGK,OAAO;IACvB,IAAI,CAACE,cAAc,CAACC,IAAI,CAACJ,GAAG,CAAC;EAC/B;EAEAK,kBAAkB;IAChB,IAAG,IAAI,CAACT,QAAQ,IAAI,CAAC,IAAI,CAACA,QAAQ,CAACC,SAAS,CAACS,QAAQ,CAAC,UAAU,CAAC,EAAE,IAAI,CAACV,QAAQ,CAACC,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC;EAC5G;;AAtBWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAe;EAAAC;IAAA;;eAAfC,2BAAuB;MAAA;;;;;;;;;;;;;;MCnBpClB,iEAWM;;;;MAXoCA,2DAAkB","names":["EventEmitter","i0","DialogComponent","constructor","handleEscapeKey","event","selected","classList","remove","onclick","doc","element","add","selectedDialog","emit","ngAfterViewChecked","contains","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Courses\\ANGULAR\\echo\\src\\app\\feature\\messenger\\messenger\\dialogs\\dialog\\dialog.component.ts","C:\\Courses\\ANGULAR\\echo\\src\\app\\feature\\messenger\\messenger\\dialogs\\dialog\\dialog.component.html"],"sourcesContent":["import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output\n} from '@angular/core';\nimport {UserDialog} from \"../../../../user-data.service\";\nimport firebase from \"firebase/compat\";\nimport {BehaviorSubject} from \"rxjs\";\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogComponent implements AfterViewChecked{\n  @Input() dialogs: BehaviorSubject<UserDialog[] | null> = null;\n  @Output() selectedDialog = new EventEmitter<UserDialog>();\n\n  @HostListener('document:keydown.escape', ['$event'])\n  handleEscapeKey(event: KeyboardEvent): void {\n    this.selected?.classList.remove('selected');\n    this.selected = null;\n  };\n\n  selected: HTMLElement | null = null;\n\n  //TODO Refactor this to identify opened dialog by its ID, not element\n  public onclick(doc: UserDialog, element: any): void{\n    if (this.selected) this.selected.classList.remove('selected');\n    element.classList.add('selected');\n    this.selected = element;\n    this.selectedDialog.emit(doc)\n  }\n\n  ngAfterViewChecked() {\n    if(this.selected && !this.selected.classList.contains('selected')) this.selected.classList.add('selected')\n  }\n}\n","<div class=\"chat flex\" *ngFor=\"let dialog of dialogs | async\" (click)=\"onclick(dialog, selected)\" [routerLink]=\"dialog.ref.id\" #selected>\n  <div class=\"img-box\">\n    <img class=\"avatar\" alt=\"User's avatar\" [attr.src]=\"dialog.otherUserPhoto\" decoding=\"async\">\n  </div>\n  <div class=\"content-box\">\n    <div class=\"header flex\">\n      <p class=\"username\">{{dialog.otherUserName}}</p>\n      <p class=\"time\">{{dialog.lastMessageTime | date:'HH:mm'}}</p>\n    </div>\n    <p class=\"message\">{{dialog.lastMessageValue}}</p>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}