{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction DialogComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1, 2);\n    i0.ɵɵlistener(\"click\", function DialogComponent_div_0_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const dialog_r1 = restoredCtx.$implicit;\n      const _r2 = i0.ɵɵreference(1);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onclick(dialog_r1, _r2));\n    });\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"div\", 6)(6, \"p\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"p\", 9);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const dialog_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", dialog_r1.ref.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"src\", dialog_r1.otherUserPhoto, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(dialog_r1.otherUserName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 5, dialog_r1.lastMessageTime, \"HH:mm\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(dialog_r1.lastMessageValue);\n  }\n}\nexport class DialogComponent {\n  constructor() {\n    this.dialogs = null;\n    this.selectedDialog = new EventEmitter();\n    this.selected = null;\n  }\n  handleEscapeKey(event) {\n    this.selected?.classList.remove('selected');\n    this.selected = null;\n  }\n  //TODO Refactor this to identify opened dialog by its ID, not element\n  onclick(doc, element) {\n    if (this.selected) this.selected.classList.remove('selected');\n    element.classList.add('selected');\n    this.selected = element;\n    this.selectedDialog.emit(doc);\n  }\n  ngAfterViewChecked() {\n    if (this.selected && !this.selected.classList.contains('selected')) this.selected.classList.add('selected');\n  }\n}\nDialogComponent.ɵfac = function DialogComponent_Factory(t) {\n  return new (t || DialogComponent)();\n};\nDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogComponent,\n  selectors: [[\"app-dialog\"]],\n  hostBindings: function DialogComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.escape\", function DialogComponent_keydown_escape_HostBindingHandler($event) {\n        return ctx.handleEscapeKey($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    dialogs: \"dialogs\"\n  },\n  outputs: {\n    selectedDialog: \"selectedDialog\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"chat flex\", 3, \"routerLink\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat\", \"flex\", 3, \"routerLink\", \"click\"], [\"selected\", \"\"], [1, \"img-box\"], [\"alt\", \"User's avatar\", \"decoding\", \"async\", 1, \"avatar\"], [1, \"content-box\"], [1, \"header\", \"flex\"], [1, \"username\"], [1, \"time\"], [1, \"message\"]],\n  template: function DialogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DialogComponent_div_0_Template, 13, 8, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.dialogs);\n    }\n  },\n  dependencies: [i1.RouterLink, i2.NgForOf, i2.DatePipe],\n  styles: [\".chat[_ngcontent-%COMP%]{padding:.7rem;max-height:7.5rem;overflow:hidden;border-radius:10px;gap:1rem;cursor:pointer}.chat[_ngcontent-%COMP%]:hover{background-color:#27272a}.chat[_ngcontent-%COMP%]:focus{outline:none}.selected[_ngcontent-%COMP%]{background-color:#6c44e3!important}.selected[_ngcontent-%COMP%]   .content-box[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%], .selected[_ngcontent-%COMP%]   .content-box[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{color:#d0d0d0!important}.content-box[_ngcontent-%COMP%]{width:100%}.avatar[_ngcontent-%COMP%]{border-radius:50%;height:5.3rem;width:5.3rem;object-fit:cover;object-position:center;image-rendering:smooth}.header[_ngcontent-%COMP%]{width:100%;justify-content:space-between;margin-bottom:1.2rem}.username[_ngcontent-%COMP%]{font-size:1.6rem;color:#d0d0d0;font-weight:600}.time[_ngcontent-%COMP%]{font-size:1.3rem;font-weight:600}.message[_ngcontent-%COMP%]{color:#777;width:100%}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}