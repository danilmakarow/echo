{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport class UserDataService {\n  constructor(store) {\n    this.store = store;\n    this.curUserData$ = new BehaviorSubject(null);\n    this.getOtherUser = otherUserId => {\n      return !otherUserId || otherUserId[0].id === this.curUserDoc.ref.id ? otherUserId[1] : otherUserId[0];\n    };\n    this.setNewUser(this.store.doc(`users/test--main`).ref);\n  }\n  setNewUser(user) {\n    this.curUserDoc = this.store.doc(`users/${user.id}`);\n    this.curUser$ = this.curUserDoc.valueChanges();\n    this.curUser$.subscribe(user => this.curUserData$.next(user));\n  }\n}\nUserDataService.ɵfac = function UserDataService_Factory(t) {\n  return new (t || UserDataService)(i0.ɵɵinject(i1.AngularFirestore));\n};\nUserDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserDataService,\n  factory: UserDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAQA,eAAe,QAA4D,MAAM;;;AAuCzF,OAAM,MAAOC,eAAe;EAO1BC,YAAoBC,KAAuB;IAAvB,UAAK,GAALA,KAAK;IAFzB,iBAAY,GAAG,IAAIH,eAAe,CAAgB,IAAI,CAAC;IAYvD,iBAAY,GAAII,WAA2D,IAAkD;MAC3H,OAAO,CAAEA,WAAY,IAAIA,WAAW,CAAC,CAAC,CAAC,CAACC,EAAE,KAAK,IAAI,CAACC,UAAU,CAACC,GAAG,CAACF,EAAE,GAAGD,WAAW,CAAC,CAAC,CAAC,GAAGA,WAAW,CAAC,CAAC,CAAC;IACzG,CAAC;IAXC,IAAI,CAACI,UAAU,CAAC,IAAI,CAACL,KAAK,CAACM,GAAG,CAAS,kBAAkB,CAAC,CAACF,GAAG,CAAC;EACjE;EAEAC,UAAU,CAACE,IAA+B;IACxC,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACH,KAAK,CAACM,GAAG,CAAC,SAASC,IAAI,CAACL,EAAE,EAAE,CAAC;IACpD,IAAI,CAACM,QAAQ,GAAG,IAAI,CAACL,UAAU,CAACM,YAAY,EAAwB;IACpE,IAAI,CAACD,QAAQ,CAACE,SAAS,CAACH,IAAI,IAAI,IAAI,CAACI,YAAY,CAACC,IAAI,CAACL,IAAI,CAAC,CAC3D;EACH;;AAhBWT,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAHd;AAAM","names":["BehaviorSubject","UserDataService","constructor","store","otherUserId","id","curUserDoc","ref","setNewUser","doc","user","curUser$","valueChanges","subscribe","curUserData$","next","factory","providedIn"],"sourceRoot":"","sources":["C:\\Courses\\ANGULAR\\echo\\src\\app\\feature\\user-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport firebase from \"firebase/compat\";\nimport DocumentReference = firebase.firestore.DocumentReference;\nimport {AngularFirestore, AngularFirestoreDocument, DocumentSnapshot} from \"@angular/fire/compat/firestore\";\nimport {BehaviorSubject, from, Observable, Subject, Subscription, throwError} from \"rxjs\";\n\n// Interfaces to export to components //\nexport interface UserDialog {\n  ref: DocumentReference<chat>,\n  otherUserName: string,\n  otherUserPhoto: string,\n  lastMessageTime: string | undefined,\n  lastMessageValue: string | undefined,\n}\n\nexport interface User {\n  name: string,\n  photo: string,\n  dialogs?: DocumentReference<message>[]\n}\n\n// Interfaces from DataBase //\nexport interface UserDB {\n  name: string,\n  photo: string,\n  dialogs: DocumentReference<chat>[]\n}\n\nexport interface chat {\n  message: message[],\n  users: DocumentReference<UserDB>[]\n}\n\nexport interface message {\n  time: string,\n  content: string,\n  senderId: DocumentReference\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserDataService {\n  curUserDoc!: AngularFirestoreDocument<UserDB>;\n\n  curUser$!: Observable<UserDB>;\n\n  curUserData$ = new BehaviorSubject<UserDB | null>(null);\n\n  constructor(private store: AngularFirestore) {\n    this.setNewUser(this.store.doc<UserDB>(`users/test--main`).ref)\n  }\n\n  setNewUser(user: DocumentReference<UserDB>) {\n    this.curUserDoc = this.store.doc(`users/${user.id}`);\n    this.curUser$ = this.curUserDoc.valueChanges() as Observable<UserDB>;\n    this.curUser$.subscribe(user => this.curUserData$.next(user)\n    );\n  }\n  getOtherUser = (otherUserId: firebase.firestore.DocumentReference<UserDB>[]): firebase.firestore.DocumentReference<UserDB> => {\n    return !(otherUserId) || otherUserId[0].id === this.curUserDoc.ref.id ? otherUserId[1] : otherUserId[0]\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}