{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport class UserDataService {\n  constructor(store) {\n    this.store = store;\n    this.curUserData$ = new BehaviorSubject(null);\n    this.getOtherUser = otherUserId => {\n      return !otherUserId || otherUserId[0].id === this.curUserDoc.ref.id ? otherUserId[1] : otherUserId[0];\n    };\n    this.setNewUser(this.store.doc(`users/test--main`).ref);\n  }\n  setNewUser(user) {\n    this.curUserDoc = this.store.doc(`users/${user.id}`);\n    this.curUser$ = this.curUserDoc.valueChanges();\n    this.curUser$.subscribe(user => this.curUserData$.next(user));\n  }\n}\nUserDataService.ɵfac = function UserDataService_Factory(t) {\n  return new (t || UserDataService)(i0.ɵɵinject(i1.AngularFirestore));\n};\nUserDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserDataService,\n  factory: UserDataService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}